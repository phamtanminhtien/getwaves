{"version":3,"sources":["components/HaftTop.js","constant.js","components/Modal.js","components/HaftBottom.js","Draw.js","App.js","index.js"],"names":["HaftTop","className","xmlns","viewBox","width","height","style","id","x1","x2","y1","y2","offset","stopColor","fill","fillRule","stroke","strokeWidth","cx","cy","r","d","transform","MODE","FILL","Modal","downloadTo","element","document","createElement","setAttribute","encodeURIComponent","getStringCodeSVG","display","body","appendChild","click","removeChild","copyTo","setState","stateBtnCopy","copy","setTimeout","format","string1","string2","string3","props","mode","color","draw","getCurve","alpha","getLine","getStep","state","ReactDOM","createPortal","onClick","setShowDownload","whiteSpace","this","strokeLinecap","strokeLinejoin","marginRight","points","React","Component","HaftBottom","num","setNum","setMode","setFill","randomAction","setColor","setAlpha","useState","showColorPicker","setShowColorPicker","showDownload","setColorWith","type","value","onChange","e","target","length","background","substr","backgroundColor","min","max","opacity","Draw","point","i","getXOf","getYOf","getLocation","stringBuilderForLine","forEach","v","_M","_L","stringBuilderForStep","stringBuilderForCur","App","setPoint","setDraw","useEffect","randomPoints","size","push","Math","round","random","render","getElementById"],"mappings":"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","file":"static/js/main.d304a0dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HaftTop.css\";\r\n\r\nconst HaftTop = () => {\r\n  return (\r\n    <div className=\"haft-top\">\r\n      <div className=\"logo\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 80 80\"\r\n          width=\"5rem\"\r\n          height=\"5rem\"\r\n          style={{ height: \"5rem\", width: \"5rem\" }}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"a\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"95.703%\">\r\n              <stop offset=\"0%\" stopColor=\"#1026F6\"></stop>\r\n              <stop offset=\"100%\" stopColor=\"#000B76\"></stop>\r\n            </linearGradient>\r\n            <linearGradient id=\"b\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"165.217%\">\r\n              <stop offset=\"0%\" stopColor=\"#09F\"></stop>\r\n              <stop offset=\"100%\" stopColor=\"#0019FF\"></stop>\r\n            </linearGradient>\r\n          </defs>\r\n          <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\r\n            <circle cx=\"40\" cy=\"40\" r=\"37\" fill=\"#000B76\"></circle>\r\n            <path\r\n              fill=\"url(#a)\"\r\n              d=\"M1 22a4.729 4.729 0 01-.305-.336A32.342 32.342 0 01.208 11.33C2.194 5.609 7.108 0 14 0c8 0 16.333 4.667 25 14l-1.714 32.565A32.22 32.22 0 0132 47C17.99 47 6.081 37.996 1.748 25.458 2.033 23.937 1.784 22.784 1 22z\"\r\n              transform=\"translate(8 25)\"\r\n            ></path>\r\n            <path\r\n              fill=\"url(#b)\"\r\n              d=\"M.038 13.421C2.631 19.807 7.618 23 15 23 31 23 36 1 51 1c4.97 0 8.87 1.647 11.7 4.941A32.009 32.009 0 0164 15c0 17.673-14.327 32-32 32C14.327 47 0 32.673 0 15c0-.53.013-1.056.038-1.579z\"\r\n              transform=\"translate(8 25)\"\r\n            ></path>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HaftTop;\r\n","export const MODE = { CURVE: 0, STEP: 1, LINE: 2 };\r\nexport const FILL = { TOP: 3, BOTTOM: 4 };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { MODE } from \"../constant\";\r\nimport copy from \"copy-to-clipboard\";\r\nexport default class Modal extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stateBtnCopy: false,\r\n    };\r\n  }\r\n  downloadTo = () => {\r\n    var element = document.createElement(\"a\");\r\n    element.setAttribute(\r\n      \"href\",\r\n      \"data:text/plain;charset=utf-8,\" +\r\n        encodeURIComponent(this.getStringCodeSVG(false))\r\n    );\r\n    element.setAttribute(\"download\", \"waveforu.svg\");\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n  };\r\n  copyTo = () => {\r\n    this.setState({ stateBtnCopy: true });\r\n    copy(this.getStringCodeSVG(false));\r\n    setTimeout(() => {\r\n      this.setState({ stateBtnCopy: false });\r\n    }, 1000);\r\n  };\r\n  getStringCodeSVG = (format) => {\r\n    let string1, string2, string3;\r\n    string1 = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">`;\r\n    switch (this.props.mode) {\r\n      case MODE.CURVE:\r\n        string2 = `<path fill=\"${\r\n          this.props.color\r\n        }\" d=\"${this.props.draw.getCurve()}\" opacity=\"${\r\n          this.props.alpha\r\n        }\"></path>`;\r\n        break;\r\n      case MODE.LINE:\r\n        string2 = `<path fill=\"${\r\n          this.props.color\r\n        }\" d=\"${this.props.draw.getLine()}\" opacity=\"${\r\n          this.props.alpha\r\n        }\"></path>`;\r\n        break;\r\n      case MODE.STEP:\r\n        string2 = `<path fill=\"${\r\n          this.props.color\r\n        }\" d=\"${this.props.draw.getStep()}\" opacity=\"${\r\n          this.props.alpha\r\n        }\"></path>`;\r\n        break;\r\n      default:\r\n    }\r\n    string3 = `</svg>`;\r\n    if (format) {\r\n      return (\r\n        <>\r\n          {string1}\r\n          <br />\r\n          <div className=\"space2\"></div>\r\n          {string2}\r\n          <br />\r\n          {string3}\r\n        </>\r\n      );\r\n    } else {\r\n      return string1 + \"\\n   \" + string2 + \"\\n\" + string3;\r\n    }\r\n  };\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"_modal\">\r\n        <div className=\"_modal-cover\">\r\n          <div\r\n            className=\"_modal-mark\"\r\n            onClick={() => {\r\n              this.props.setShowDownload(false);\r\n            }}\r\n          ></div>\r\n          <div className=\"_modal-sticker\">\r\n            <div className=\"_modal-title\">\r\n              <h1>Download</h1>\r\n            </div>\r\n            <div className=\"_modal-content\">\r\n              <code style={{ whiteSpace: \"nowrap\" }}>\r\n                {this.props.draw && this.getStringCodeSVG(true)}\r\n              </code>\r\n            </div>\r\n            <div className=\"_modal-action\">\r\n              <div className=\"_modal-download-svg\">\r\n                <button onClick={this.downloadTo}>Download SVG</button>\r\n              </div>\r\n              <div className=\"_modal-copy-code\">\r\n                {this.state.stateBtnCopy ? (\r\n                  <button>\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"1.25rem\"\r\n                      height=\"1.25rem\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"3\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      style={{ width: \"1.25rem\", marginRight: \"0.5rem\" }}\r\n                    >\r\n                      <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                      <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                    </svg>\r\n                    Copied\r\n                  </button>\r\n                ) : (\r\n                  <button onClick={this.copyTo}>Copy SVG Code</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      document.body\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./HaftBottom.css\";\r\nimport { MODE, FILL } from \"../constant\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst HaftBottom = ({\r\n  mode,\r\n  fill,\r\n  color,\r\n  alpha,\r\n  num,\r\n  setNum,\r\n  draw,\r\n  setMode,\r\n  setFill,\r\n  randomAction,\r\n  setColor,\r\n  setAlpha,\r\n}) => {\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [showDownload, setShowDownload] = useState(false);\r\n\r\n  const onChangeColorNotFI = (e) => {\r\n    if (e.target.value.length < 7) setColor(\"#\" + e.target.value);\r\n  };\r\n  const onChangeNum = (e) => {\r\n    setNum(e.target.value);\r\n  };\r\n  const onChangeColor = (e) => {\r\n    if (e.target.value.length < 8) setColor(e.target.value);\r\n  };\r\n  const setColorWith = (color) => {\r\n    setColor(color);\r\n  };\r\n  const onChangeAlpha = (e) => {\r\n    setAlpha(e.target.value / 100);\r\n  };\r\n  return (\r\n    <div className=\"haft-bottom\">\r\n      <div className=\"top\">\r\n        <div className=\"title\">\r\n          <h1>Make some waves!</h1>\r\n        </div>\r\n        <div className=\"option\">\r\n          <div className=\"option-cover\">\r\n            <div className=\"row1\">\r\n              <div className=\"group\">\r\n                <button\r\n                  id=\"curve\"\r\n                  className={mode === MODE.CURVE ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    setMode(MODE.CURVE);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      fill=\"none\"\r\n                      fillRule=\"nonzero\"\r\n                      stroke=\"currentcolor\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M1 13.04l1.222 2.586c1.222 2.634 3.667 5.757 6.111 3.779 2.445-1.979 3.89-13.01 7.334-14.988 2.296-1.32 4.74 1.485 7.333 8.412\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n                <button\r\n                  id=\"step\"\r\n                  className={mode === MODE.STEP ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    setMode(MODE.STEP);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      fill=\"none\"\r\n                      fillRule=\"nonzero\"\r\n                      stroke=\"currentcolor\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M1 20L8 20 8 4 16 4 16 13.5172414 23 13.5172414\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n                <button\r\n                  id=\"line\"\r\n                  className={mode === MODE.LINE ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    setMode(MODE.LINE);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      fill=\"none\"\r\n                      fillRule=\"nonzero\"\r\n                      stroke=\"currentcolor\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M1 13.3142857L8 20 16 4 23 11.8857143\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"group\">\r\n                <button\r\n                  id=\"up\"\r\n                  className={fill === FILL.TOP ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    setFill(FILL.TOP);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      fill=\"none\"\r\n                      fillRule=\"evenodd\"\r\n                      stroke=\"currentcolor\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M18 15L12 9 6 15\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n                <button\r\n                  id=\"down\"\r\n                  className={fill === FILL.BOTTOM ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    setFill(FILL.BOTTOM);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      fill=\"none\"\r\n                      fillRule=\"evenodd\"\r\n                      stroke=\"currentcolor\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M6 9L12 15 18 9\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row2\">\r\n              <div className=\"group\">\r\n                {showColorPicker && (\r\n                  <div\r\n                    className=\"mark\"\r\n                    onClick={() => {\r\n                      setShowColorPicker(false);\r\n                    }}\r\n                  ></div>\r\n                )}\r\n                <div\r\n                  className=\"input-base for-text\"\r\n                  onClick={() => {\r\n                    setShowColorPicker(true);\r\n                  }}\r\n                >\r\n                  <input type=\"text\" value={color} onChange={onChangeColor} />\r\n                  {showColorPicker && (\r\n                    <div className=\"color-panel\">\r\n                      <div className=\"cp-row\">\r\n                        <span\r\n                          style={{ background: \"#a2d9ff\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#a2d9ff\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#0099ff\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#0099ff\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#000b76\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#000b76\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#5000ca\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#5000ca\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#e7008a\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#e7008a\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#ff5500\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#ff5500\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#00cba9\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#00cba9\");\r\n                          }}\r\n                        ></span>\r\n                      </div>\r\n                      <div className=\"cp-row\">\r\n                        <span\r\n                          style={{ background: \"#ffd700\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#ffd700\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#f3f4f5\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#f3f4f5\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"#273036\" }}\r\n                          onClick={() => {\r\n                            setColorWith(\"#273036\");\r\n                          }}\r\n                        ></span>\r\n                        <span\r\n                          style={{ background: \"rgb(240 240 240)\" }}\r\n                          className=\"firsta\"\r\n                        >\r\n                          #\r\n                        </span>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={color.substr(1)}\r\n                          onChange={onChangeColorNotFI}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <span\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: color }}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"group\">\r\n                <div className=\"input-base ipb-pc\">\r\n                  <input\r\n                    type=\"number\"\r\n                    value={alpha * 100}\r\n                    onChange={onChangeAlpha}\r\n                  />\r\n                  <span className=\"percent\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row3\">\r\n              <div className=\"group\">\r\n                <div className=\"low\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    {mode === MODE.CURVE && (\r\n                      <path\r\n                        fill=\"none\"\r\n                        fillRule=\"nonzero\"\r\n                        stroke=\"currentcolor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M1 13.247l1.833-.876c1.834-.876 5.5-2.63 9.167-2.339 3.667.312 7.333 2.613 9.167 3.801L23 15\"\r\n                      ></path>\r\n                    )}\r\n                    {mode === MODE.STEP && (\r\n                      <path\r\n                        fill=\"none\"\r\n                        fillRule=\"nonzero\"\r\n                        stroke=\"currentcolor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M1 22L11 22 11 3 22 3 22 21.5172414\"\r\n                      ></path>\r\n                    )}\r\n                    {mode === MODE.LINE && (\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          fill=\"none\"\r\n                          fillRule=\"evenodd\"\r\n                          stroke=\"currentcolor\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M5 16l14-7\"\r\n                        ></path>\r\n                      </svg>\r\n                    )}\r\n                  </svg>\r\n                </div>\r\n                <div className=\"input-range\">\r\n                  <input\r\n                    className=\"slider\"\r\n                    type=\"range\"\r\n                    min=\"2\"\r\n                    max=\"40\"\r\n                    value={num}\r\n                    onChange={onChangeNum}\r\n                  />\r\n                </div>\r\n                <div className=\"high\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    {mode === MODE.CURVE && (\r\n                      <path\r\n                        fill=\"none\"\r\n                        fillRule=\"nonzero\"\r\n                        stroke=\"currentcolor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M1 13.736C2.04 11.933 3.09 5.049 4.146 5c.659.031 1.324 2.817 1.985 5.531.38 1.561.76 3.098 1.138 4.073 1.059 2.574 2.113.935 3.146-.868 1.057-1.803 2.113-3.442 3.146-3.491 1.055.049 2.114 1.688 3.146 4.36 1.052 2.573 2.09 6.178 3.147 5.244 1.05-.869 2.09-6.113 2.618-8.736L23 8.491\"\r\n                      ></path>\r\n                    )}\r\n                    {mode === MODE.STEP && (\r\n                      <path\r\n                        fill=\"none\"\r\n                        fillRule=\"nonzero\"\r\n                        stroke=\"currentcolor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M1 23L1 12.9388611 5.55130912 12.9388611 5.55130912 1 10.0447933 1 10.0447933 9.64319035 14.5085979 9.64319035 14.5085979 14.858897 18.8965816 14.858897 18.8965816 5.5443012 23 5.5443012 23 22.0552669\"\r\n                      ></path>\r\n                    )}\r\n                    {mode === MODE.LINE && (\r\n                      <path\r\n                        fill=\"none\"\r\n                        fillRule=\"nonzero\"\r\n                        stroke=\"currentcolor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M1 21.3703704L4.66666667 7.51851852 8.33333333 21.3703704 12 4.25925926 15.6666667 19.7407407 19.3333333 1 23 23\"\r\n                      ></path>\r\n                    )}\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"ram\" onClick={randomAction}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"32\"\r\n                  height=\"32\"\r\n                  viewBox=\"0 0 32 32\"\r\n                >\r\n                  <path\r\n                    fill=\"currentcolor\"\r\n                    fillRule=\"nonzero\"\r\n                    stroke=\"none\"\r\n                    strokeWidth=\"1\"\r\n                    d=\"M7.38 5.555l15.592-1.367A3.419 3.419 0 0126.673 7.3L28.05 23.06a3.422 3.422 0 01-3.106 3.71L9.352 28.137a3.419 3.419 0 01-3.702-3.113L4.275 9.265a3.422 3.422 0 013.106-3.71zm.2 2.274a1.14 1.14 0 00-1.036 1.237l1.375 15.759a1.14 1.14 0 001.234 1.038l15.591-1.368a1.14 1.14 0 001.036-1.236l-1.376-15.76a1.14 1.14 0 00-1.234-1.037L7.58 7.829zm3.254 5.39a1.69 1.69 0 01-1.825-1.545 1.692 1.692 0 011.53-1.84 1.69 1.69 0 011.825 1.546 1.692 1.692 0 01-1.53 1.839zm10.065-.883a1.69 1.69 0 01-1.826-1.545 1.692 1.692 0 011.53-1.84 1.69 1.69 0 011.825 1.546 1.692 1.692 0 01-1.53 1.84zM11.72 23.373a1.69 1.69 0 01-1.825-1.545 1.692 1.692 0 011.53-1.84 1.69 1.69 0 011.825 1.545 1.692 1.692 0 01-1.53 1.84zm10.065-.883a1.69 1.69 0 01-1.825-1.545 1.692 1.692 0 011.53-1.84 1.69 1.69 0 011.825 1.546 1.692 1.692 0 01-1.53 1.84zm-5.476-4.635a1.69 1.69 0 01-1.825-1.546 1.692 1.692 0 011.53-1.839 1.69 1.69 0 011.825 1.545 1.692 1.692 0 01-1.53 1.84zM29.183 6.823l-.015.002A.915.915 0 0128.167 6c-.265-2.544-2.523-4.39-5.045-4.121h-.007a.916.916 0 01-1.002-.824.922.922 0 01.808-1.018h.002l.007-.001a6.387 6.387 0 014.718 1.408 6.498 6.498 0 012.347 4.363.922.922 0 01-.812 1.016zM8.547 32h-.008a6.395 6.395 0 01-4.578-1.818 6.51 6.51 0 01-1.96-4.553.92.92 0 01.895-.942h.016c.503-.008.917.4.926.91.044 2.559 2.134 4.595 4.67 4.55h.006a.918.918 0 01.927.91.92.92 0 01-.894.943z\"\r\n                  ></path>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"wave\">\r\n        <div className=\"download-btn\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              setShowDownload(true);\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentcolor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path d=\"M21.2 15c.7-1.2 1-2.5.7-3.9-.6-2-2.4-3.5-4.4-3.5h-1.2c-.7-3-3.2-5.2-6.2-5.6-3-.3-5.9 1.3-7.3 4-1.2 2.5-1 6.5.5 8.8M12 19.8V12M16 17l-4 4-4-4\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        {draw && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n            {mode === MODE.CURVE && (\r\n              <path fill={color} d={draw.getCurve()} opacity={alpha}></path>\r\n            )}\r\n            {mode === MODE.STEP && (\r\n              <path fill={color} d={draw.getStep()} opacity={alpha}></path>\r\n            )}\r\n            {mode === MODE.LINE && (\r\n              <path fill={color} d={draw.getLine()} opacity={alpha}></path>\r\n            )}\r\n          </svg>\r\n        )}\r\n      </div>\r\n      {showDownload && (\r\n        <Modal\r\n          draw={draw}\r\n          color={color}\r\n          alpha={alpha}\r\n          mode={mode}\r\n          setShowDownload={setShowDownload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HaftBottom;\r\n","import { FILL } from \"./constant\";\r\n\r\nexport default class Draw {\r\n  constructor(point, fill) {\r\n    this.fill = fill;\r\n    this.point = point;\r\n    this.height = 320;\r\n    this.width = 1440;\r\n  }\r\n  getXOf(i) {\r\n    const onePice = this.width / (this.point.length - 1);\r\n    return i * onePice;\r\n  }\r\n  getYOf(i) {\r\n    return this.height * (this.point[i] / 10);\r\n  }\r\n  getLocation(i) {\r\n    return this.getXOf(i) + \",\" + this.getYOf(i);\r\n  }\r\n  _M(i) {\r\n    return \"M\" + this.getLocation(i);\r\n  }\r\n  _L(i) {\r\n    return \"L\" + this.getLocation(i);\r\n  }\r\n\r\n  getLine() {\r\n    if (this.point.length < 2) return \"\";\r\n    let stringBuilderForLine = \"\";\r\n    this.point.forEach((v, i) => {\r\n      if (i === 0) {\r\n        stringBuilderForLine += this._M(i);\r\n      } else {\r\n        stringBuilderForLine += this._L(i);\r\n      }\r\n    });\r\n    if (this.fill === FILL.BOTTOM) {\r\n      stringBuilderForLine += \"L\" + this.width + \",\" + this.height;\r\n      stringBuilderForLine += \"L0,\" + this.height + \"Z\";\r\n    } else {\r\n      stringBuilderForLine += \"L\" + this.width + \",0\";\r\n      stringBuilderForLine += \"L0,0Z\";\r\n    }\r\n\r\n    return stringBuilderForLine;\r\n  }\r\n\r\n  getStep() {\r\n    if (this.point.length < 2) return \"\";\r\n\r\n    let stringBuilderForStep = \"\";\r\n    if (this.point.length === 2) {\r\n      stringBuilderForStep += this._M(0);\r\n      stringBuilderForStep += \"L\" + this.getXOf(1) + \",\" + this.getYOf(0);\r\n      stringBuilderForStep += \"L\" + this.getXOf(1) + \",\" + this.getYOf(1);\r\n      stringBuilderForStep += \"L\" + this.width + \",\" + this.getYOf(1);\r\n    } else {\r\n      this.point.forEach((v, i) => {\r\n        if (i === 0) {\r\n          stringBuilderForStep += this._M(i);\r\n        } else if (i < this.point.length - 1) {\r\n          stringBuilderForStep +=\r\n            \"L\" + this.getXOf(i) + \",\" + this.getYOf(i - 1);\r\n          stringBuilderForStep += \"L\" + this.getXOf(i) + \",\" + this.getYOf(i);\r\n        }\r\n      });\r\n      if (this.point[this.point.length - 2] === 10) {\r\n        stringBuilderForStep +=\r\n          \"L\" +\r\n          (this.point.length - 2) * (this.width / (this.point.length - 1)) +\r\n          \",\" +\r\n          this.height * (9 / 10);\r\n        stringBuilderForStep += \"L\" + this.width + \",\" + this.height * (9 / 10);\r\n      } else {\r\n        stringBuilderForStep +=\r\n          \"L\" + this.width + \",\" + this.getYOf(this.point.length - 2);\r\n      }\r\n    }\r\n\r\n    if (this.fill === FILL.BOTTOM) {\r\n      stringBuilderForStep += \"L\" + this.width + \",\" + this.height;\r\n      stringBuilderForStep += \"L0,\" + this.height + \"Z\";\r\n    } else {\r\n      stringBuilderForStep += \"L\" + this.width + \",0\";\r\n      stringBuilderForStep += \"L0,0Z\";\r\n    }\r\n\r\n    return stringBuilderForStep;\r\n  }\r\n\r\n  getCurve() {\r\n    if (this.point.length < 2) return \"\";\r\n    // let onePice = this.width / (this.point.length - 1);\r\n    let stringBuilderForCur = this._M(0);\r\n    stringBuilderForCur +=\r\n      \"L\" +\r\n      (this.getXOf(0) + (this.getXOf(1) - this.getXOf(0)) / 2) +\r\n      \",\" +\r\n      (this.getYOf(0) + (this.getYOf(1) - this.getYOf(0)) / 2);\r\n\r\n    for (let i = 1; i < this.point.length - 1; i++) {\r\n      stringBuilderForCur +=\r\n        \"C\" +\r\n        this.getXOf(i) +\r\n        \" \" +\r\n        this.getYOf(i) +\r\n        \",\" +\r\n        this.getXOf(i) +\r\n        \" \" +\r\n        this.getYOf(i) +\r\n        \",\" +\r\n        (this.getXOf(i) + (this.getXOf(i + 1) - this.getXOf(i)) / 2) +\r\n        \" \" +\r\n        (this.getYOf(i) + (this.getYOf(i + 1) - this.getYOf(i)) / 2);\r\n    }\r\n\r\n    stringBuilderForCur +=\r\n      \"L\" + this.width + \",\" + this.getYOf(this.point.length - 1);\r\n\r\n    if (this.fill === FILL.BOTTOM) {\r\n      stringBuilderForCur += \"L\" + this.width + \",\" + this.height;\r\n      stringBuilderForCur += \"L0,\" + this.height + \"Z\";\r\n    } else {\r\n      stringBuilderForCur += \"L\" + this.width + \",0\";\r\n      stringBuilderForCur += \"L0,0Z\";\r\n    }\r\n\r\n    return stringBuilderForCur;\r\n  }\r\n}\r\n","import HaftTop from \"./components/HaftTop\";\nimport HaftBottom from \"./components/HaftBottom\";\nimport Draw from \"./Draw\";\nimport { useEffect, useState } from \"react\";\nimport { MODE, FILL } from \"./constant\";\n\nfunction App() {\n  const [mode, setMode] = useState(MODE.CURVE);\n  const [fill, setFill] = useState(FILL.BOTTOM);\n  const [color, setColor] = useState(\"#0099ff\");\n  const [alpha, setAlpha] = useState(1);\n  const [num, setNum] = useState(3);\n  const [points, setPoint] = useState([]);\n  const [draw, setDraw] = useState();\n\n  useEffect(() => {\n    setPoint(randomPoints(num, fill));\n  }, [num]);\n  useEffect(() => {\n    setDraw(new Draw(points, fill));\n  }, [points]);\n  useEffect(() => {\n    setDraw(new Draw(points, fill));\n  }, [fill]);\n  const randomPoints = (size) => {\n    let point = [];\n    for (let i = 0; i < size; i++) {\n      point.push(Math.round(Math.random() * 10));\n    }\n    return point;\n  };\n  const randomAction = () => {\n    setPoint(randomPoints(num, fill));\n  };\n  return (\n    <div className=\"App\">\n      <HaftTop></HaftTop>\n      <HaftBottom\n        mode={mode}\n        fill={fill}\n        color={color}\n        alpha={alpha}\n        num={num}\n        setNum={setNum}\n        draw={draw}\n        setMode={setMode}\n        setFill={setFill}\n        randomAction={randomAction}\n        setColor={setColor}\n        setAlpha={setAlpha}\n      ></HaftBottom>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}